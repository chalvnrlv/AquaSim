import NodeLibrary from 'three/src/renderers/common/nodes/NodeLibrary.js';

// Materials
import { MeshPhongMaterial } from 'three/src/materials/MeshPhongMaterial.js';
import MeshPhongNodeMaterial from 'three/src/materials/nodes/MeshPhongNodeMaterial.js';
import { MeshStandardMaterial } from 'three/src/materials/MeshStandardMaterial.js';
import MeshStandardNodeMaterial from 'three/src/materials/nodes/MeshStandardNodeMaterial.js';
import { MeshPhysicalMaterial } from 'three/src/materials/MeshPhysicalMaterial.js';
import MeshPhysicalNodeMaterial from 'three/src/materials/nodes/MeshPhysicalNodeMaterial.js';
import { MeshToonMaterial } from 'three/src/materials/MeshToonMaterial.js';
import MeshToonNodeMaterial from 'three/src/materials/nodes/MeshToonNodeMaterial.js';
import { MeshBasicMaterial } from 'three/src/materials/MeshBasicMaterial.js';
import MeshBasicNodeMaterial from 'three/src/materials/nodes/MeshBasicNodeMaterial.js';
import { MeshLambertMaterial } from 'three/src/materials/MeshLambertMaterial.js';
import MeshLambertNodeMaterial from 'three/src/materials/nodes/MeshLambertNodeMaterial.js';
import { MeshNormalMaterial } from 'three/src/materials/MeshNormalMaterial.js';
import MeshNormalNodeMaterial from 'three/src/materials/nodes/MeshNormalNodeMaterial.js';
import { MeshMatcapMaterial } from 'three/src/materials/MeshMatcapMaterial.js';
import MeshMatcapNodeMaterial from 'three/src/materials/nodes/MeshMatcapNodeMaterial.js';
import { LineBasicMaterial } from 'three/src/materials/LineBasicMaterial.js';
import LineBasicNodeMaterial from 'three/src/materials/nodes/LineBasicNodeMaterial.js';
import { LineDashedMaterial } from 'three/src/materials/LineDashedMaterial.js';
import LineDashedNodeMaterial from 'three/src/materials/nodes/LineDashedNodeMaterial.js';
import { PointsMaterial } from 'three/src/materials/PointsMaterial.js';
import PointsNodeMaterial from 'three/src/materials/nodes/PointsNodeMaterial.js';
import { SpriteMaterial } from 'three/src/materials/SpriteMaterial.js';
import SpriteNodeMaterial from 'three/src/materials/nodes/SpriteNodeMaterial.js';
import { ShadowMaterial } from 'three/src/materials/ShadowMaterial.js';
import ShadowNodeMaterial from 'three/src/materials/nodes/ShadowNodeMaterial.js';
//import { MeshDepthMaterial } from '../../../materials/MeshDepthMaterial.js';
//import MeshDepthNodeMaterial from '../../../materials/nodes/MeshDepthNodeMaterial.js';
//import { MeshDistanceMaterial } from '../../../materials/MeshDistanceMaterial.js';
//import MeshDistanceNodeMaterial from '../../../materials/nodes/MeshDistanceNodeMaterial.js';

// Lights
import { PointLight } from 'three/src/lights/PointLight.js';
import { PointLightNode } from 'three/src/nodes/Nodes.js';
import { DirectionalLight } from 'three/src/lights/DirectionalLight.js';
import { DirectionalLightNode } from 'three/src/nodes/Nodes.js';
import { RectAreaLight } from 'three/src/lights/RectAreaLight.js';
import { RectAreaLightNode } from 'three/src/nodes/Nodes.js';
import { SpotLight } from 'three/src/lights/SpotLight.js';
import { SpotLightNode } from 'three/src/nodes/Nodes.js';
import { AmbientLight } from 'three/src/lights/AmbientLight.js';
import { AmbientLightNode } from 'three/src/nodes/Nodes.js';
import { HemisphereLight } from 'three/src/lights/HemisphereLight.js';
import { HemisphereLightNode } from 'three/src/nodes/Nodes.js';
import { LightProbe } from 'three/src/lights/LightProbe.js';
import { LightProbeNode } from 'three/src/nodes/Nodes.js';
import IESSpotLight from 'three/src/lights/webgpu/IESSpotLight.js';
import { IESSpotLightNode } from 'three/src/nodes/Nodes.js';

// Tone Mapping
import { LinearToneMapping, ReinhardToneMapping, CineonToneMapping, ACESFilmicToneMapping, AgXToneMapping, NeutralToneMapping } from 'three/src/constants.js';
import { linearToneMapping, reinhardToneMapping, cineonToneMapping, acesFilmicToneMapping, agxToneMapping, neutralToneMapping } from 'three/src/nodes/display/ToneMappingFunctions.js';

// Color Space
import { LinearSRGBColorSpace, SRGBColorSpace } from 'three/src/constants.js';
import { linearSRGBTosRGB, sRGBToLinearSRGB } from 'three/src/nodes/display/ColorSpaceFunctions.js';
import { getColorSpaceMethod } from 'three/src/nodes/display/ColorSpaceNode.js';

class StandardNodeLibrary extends NodeLibrary {

	constructor() {

		super();

		this.addMaterial( MeshPhongNodeMaterial, MeshPhongMaterial );
		this.addMaterial( MeshStandardNodeMaterial, MeshStandardMaterial );
		this.addMaterial( MeshPhysicalNodeMaterial, MeshPhysicalMaterial );
		this.addMaterial( MeshToonNodeMaterial, MeshToonMaterial );
		this.addMaterial( MeshBasicNodeMaterial, MeshBasicMaterial );
		this.addMaterial( MeshLambertNodeMaterial, MeshLambertMaterial );
		this.addMaterial( MeshNormalNodeMaterial, MeshNormalMaterial );
		this.addMaterial( MeshMatcapNodeMaterial, MeshMatcapMaterial );
		this.addMaterial( LineBasicNodeMaterial, LineBasicMaterial );
		this.addMaterial( LineDashedNodeMaterial, LineDashedMaterial );
		this.addMaterial( PointsNodeMaterial, PointsMaterial );
		this.addMaterial( SpriteNodeMaterial, SpriteMaterial );
		this.addMaterial( ShadowNodeMaterial, ShadowMaterial );

		this.addLight( PointLightNode, PointLight );
		this.addLight( DirectionalLightNode, DirectionalLight );
		this.addLight( RectAreaLightNode, RectAreaLight );
		this.addLight( SpotLightNode, SpotLight );
		this.addLight( AmbientLightNode, AmbientLight );
		this.addLight( HemisphereLightNode, HemisphereLight );
		this.addLight( LightProbeNode, LightProbe );
		this.addLight( IESSpotLightNode, IESSpotLight );

		this.addToneMapping( linearToneMapping, LinearToneMapping );
		this.addToneMapping( reinhardToneMapping, ReinhardToneMapping );
		this.addToneMapping( cineonToneMapping, CineonToneMapping );
		this.addToneMapping( acesFilmicToneMapping, ACESFilmicToneMapping );
		this.addToneMapping( agxToneMapping, AgXToneMapping );
		this.addToneMapping( neutralToneMapping, NeutralToneMapping );

		this.addColorSpace( linearSRGBTosRGB, getColorSpaceMethod( LinearSRGBColorSpace, SRGBColorSpace ) );
		this.addColorSpace( sRGBToLinearSRGB, getColorSpaceMethod( SRGBColorSpace, LinearSRGBColorSpace ) );

	}

}

export default StandardNodeLibrary;
